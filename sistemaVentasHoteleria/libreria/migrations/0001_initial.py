# Generated by Django 5.2.3 on 2025-06-24 05:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BedType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre del tipo de documento')),
                ('abbreviation', models.CharField(max_length=10, unique=True, verbose_name='Abreviatura (DNI, RUC, etc.)')),
            ],
            options={
                'verbose_name': 'Tipo de Documento',
                'verbose_name_plural': 'Tipos de Documentos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReservationSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre de la categoría')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Categoría de Cuarto',
                'verbose_name_plural': 'Categorías de Cuartos',
            },
        ),
        migrations.CreateModel(
            name='RoomStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numero documento')),
                ('full_name', models.CharField(max_length=100, verbose_name='Nombre completo')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='libreria.documenttype', verbose_name='Tipo de documento')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='libreria.province')),
            ],
        ),
        migrations.AddField(
            model_name='province',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='libreria.region'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=50, verbose_name='Apellidos')),
                ('dni', models.CharField(max_length=20, unique=True, verbose_name='DNI')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('phone', models.CharField(max_length=15, verbose_name='Teléfono')),
                ('address', models.CharField(max_length=255, verbose_name='Dirección')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('accepted_terms', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libreria.district')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libreria.region')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, unique=True, verbose_name='Número')),
                ('floor', models.IntegerField(verbose_name='Piso')),
                ('capacity', models.PositiveIntegerField(default=1, verbose_name='Capacidad')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio por noche')),
                ('available', models.BooleanField(default=True, verbose_name='Disponible')),
                ('image', models.ImageField(blank=True, null=True, upload_to='rooms/', verbose_name='Imagen del cuarto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('bed_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libreria.bedtype', verbose_name='Tipo de Cama')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libreria.roomcategory', verbose_name='Categoría')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libreria.roomstatus', verbose_name='Estado del Cuarto')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libreria.roomtype', verbose_name='Tipo de Cuarto')),
            ],
            options={
                'verbose_name': 'Cuarto',
                'verbose_name_plural': 'Cuartos',
                'ordering': ['floor', 'number'],
            },
        ),
        migrations.CreateModel(
            name='RoomReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=12, unique=True)),
                ('check_in', models.DateField()),
                ('check_out', models.DateField()),
                ('status', models.CharField(choices=[('reservado', 'Reservado'), ('ocupado', 'Ocupado'), ('cancelado', 'Cancelado'), ('finalizado', 'Finalizado')], default='reservado', max_length=15)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='libreria.customer')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='libreria.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_at', models.DateTimeField(auto_now_add=True)),
                ('method', models.CharField(choices=[('efectivo', 'Efectivo'), ('tarjeta', 'Tarjeta'), ('yape', 'Yape'), ('plin', 'Plin')], max_length=20)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='libreria.roomreservation')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='Nombre completo')),
                ('role', models.CharField(max_length=50, verbose_name='Cargo o función')),
                ('document_number', models.CharField(max_length=20, verbose_name='Número de documento')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo electrónico')),
                ('phone', models.CharField(max_length=15, verbose_name='Teléfono')),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='libreria.documenttype', verbose_name='Tipo de documento')),
            ],
            options={
                'verbose_name': 'Personal',
                'verbose_name_plural': 'Personal',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='RoomMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('preventivo', 'Preventivo'), ('correctivo', 'Correctivo')], max_length=20)),
                ('description', models.TextField()),
                ('scheduled_start', models.DateField(verbose_name='Inicio Programado')),
                ('scheduled_end', models.DateField(blank=True, null=True, verbose_name='Fin Programado')),
                ('completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mantenimientos', to='libreria.room')),
                ('responsible_staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libreria.staff')),
            ],
            options={
                'verbose_name': 'Mantenimiento de Cuarto',
                'verbose_name_plural': 'Mantenimientos de Cuartos',
            },
        ),
        migrations.CreateModel(
            name='RoomChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cambios_estado', to='libreria.room')),
                ('new_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='libreria.roomstatus')),
                ('previous_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='libreria.roomstatus')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libreria.staff')),
            ],
            options={
                'verbose_name': 'Cambio de Estado del Cuarto',
                'verbose_name_plural': 'Historial de Estado de Cuartos',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ReservationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_status', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmado', 'Confirmado'), ('checkin', 'Check-in'), ('checkout', 'Check-out'), ('cancelado', 'Cancelado')], max_length=20)),
                ('new_status', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmado', 'Confirmado'), ('checkin', 'Check-in'), ('checkout', 'Check-out'), ('cancelado', 'Cancelado')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial', to='libreria.roomreservation')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libreria.staff')),
            ],
            options={
                'verbose_name': 'Historial de Reserva',
                'verbose_name_plural': 'Historial de Reservas',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RoomAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='libreria.amenity')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='libreria.room')),
            ],
            options={
                'unique_together': {('room', 'amenity')},
            },
        ),
        migrations.CreateModel(
            name='RoomService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='libreria.room')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='libreria.service')),
            ],
            options={
                'unique_together': {('room', 'service')},
            },
        ),
    ]
